apply plugin: 'java'

sourceSets {
    main {
        resources {
            srcDir 'dist'
        }
    }
}

/**
 * Install all Node/Grunt dependencies defined in package.json
 */
task npm(type: Exec) {
    // be Gradle-like and suppress boilerplate logging
    logging.captureStandardOutput LogLevel.INFO
    // but we do always want to see downloads in the log
    logging.captureStandardError LogLevel.LIFECYCLE

    group = "Build"
    description = "Installs all Node/Grunt dependencies defined in package.json"

    inputs.file "package.json"
    outputs.dir "node_modules"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine = ["cmd", "/c", "npm", "install"]
    } else {
        commandLine = ["npm", "install"]
    }
}

/**
 * Install all Bower dependencies defined in bower.json
 */
task bower(type: GruntTask, dependsOn: npm) {
    group = "Build"
    description = "Installs all Bower dependencies defined in bower.json"
    gruntArgs = "bower:install"
}

/**
 * Build JavaScript, equivalent of 'grunt build'.
 */
task buildjs(type: GruntTask, dependsOn: [bower, npm]) {
    group = "Build"
    description = "Assembles and tests JS of this project."
    gruntArgs = "build"
    inputs.dir "app"
    inputs.file file("Gruntfile.js")
    outputs.dir "dist"
}
jar.dependsOn buildjs

/**
 * Clean JavaScript, equivalent of 'grunt clean'.
 */
task cleanjs(type: GruntTask) {
    group = "Clean"
    description = "Clean JS build of this project."
    gruntArgs = "clean"
}
clean.dependsOn cleanjs

//
// Gradle Extensions
//

import org.apache.tools.ant.taskdefs.condition.Os

/**
 * Define GruntTask
 */
class GruntTask extends Exec {

    private String gruntPath = "node_modules/grunt-cli/bin/grunt"

    public GruntTask() {
        super()
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            this.setExecutable("node.exe")
        } else {
            this.setExecutable("node")
        }
    }

    public void setGruntArgs(String gruntArgs) {
        this.args = [gruntPath] + ("$gruntArgs".trim().split(" ") as List)
    }
}
